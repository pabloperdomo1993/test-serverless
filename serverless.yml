service: back-end
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - secretsmanager:GetSecretValue
        - rds-db:*
        - lambda:*
        - sqs:*
        - lambda:InvokeFunction
        - lambda:InvokeAsync
      Resource:
        - arn:aws:rds:us-east-2:943766074476:db:testdatabase
        - arn:aws:secretsmanager:us-east-2:943766074476:secret:URL_EXTERNAL_API-dp0YGm
        - arn:aws:sqs:us-east-2:943766074476:user_save
        - arn:aws:lambda:us-east-2:943766074476:function:back-end-dev-dbAccess

functions:
  searchEngineClinic:
    handler: src/searchEngineClinic.searchEngineClinic
    timeout: 30
    events:
      - httpApi:
          path: /search/clinics
          method: get
  searchEngineDoctor:
    handler: src/searchEngineDoctor.searchEngineDoctor
    timeout: 30
    events:
      - httpApi:
          path: /search/doctors
          method: get
  referenceData:
    handler: src/referenceData.referenceData
    timeout: 30
    events:
      - httpApi:
          path: /search/reference
          method: get
  userSave:
    handler: src/userSave.userSave
    timeout: 30
    events:
      - httpApi:
          path: /search/user-save
          method: post
  dbAccess:
    handler: src/dbAccess.dbAccess
    timeout: 30
    events:
      - httpApi:
          path: /search/db-access
          method: post

resources: ${file(resources.yml)}

custom:
  serverlessPluginTypescript:
    tsConfigFileLocation: './tsconfig.build.json'
 
plugins:
  - serverless-plugin-typescript
  - serverless-offline
